import pandas as pd
from sklearn.datasets import load_iris
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score


#load iris
iris = load_iris()
X = iris.data
y = iris.target 

# Normalize
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# 80% train and 20% test
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

#k-NN
def eval_knn(k):
    knn = KNeighborsClassifier(n_neighbors=k)
    knn.fit(X_train, y_train)
    y_prediction = knn.predict(X_test)
    accuracy = accuracy_score(y_test, y_prediction)
    
    return accuracy

# compare
k_values = range(1, 51)  
accuracies = []

# Loop over k value
for k in k_values:
    accuracy = eval_knn(k)
    accuracies.append(accuracy)
    print(f'Accuracy for k={k}: {accuracy:.4f}')

# Plot
plt.figure(figsize=(10, 6))
plt.plot(k_values, accuracies, marker='o')
plt.title('Different k Values Accuracy')
plt.xlabel('k (Number of Neighbors)')
plt.ylabel('Accuracy')
plt.xticks(k_values)
plt.grid(True)
plt.show()
